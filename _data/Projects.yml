subject: Projects
listing-order: 3
icon: "/assets/img/clipboard-list.svg"
contents:
  - title: "Present ([https://github.com/turingschool/present](https://github.com/turingschool/present))"
    image: "![](assets/img/present_logo.png)"
    description: 
      - Ruby on Rails application used to manage and synchronize student attendance data.
      - Built CRUD functionality for admin and standard users, including error handling and testing.
      - Utilized Sidekiq and Redis to incorporate asynchronous background jobs, and Rails Logger to create audit logs of changes.
      - Incorporated Turbo frames into the frontend to optimize user experience.
      - Upgraded app from legacy Populi API to Populi API V2 including converting all API calls, unit tests, and integration tests.
      - Implemented WebMock and VCR to optimize the testing suite.
      - Redesigned and updated HTML and CSS styling application wide.

  - title: "Alan" 
    description: 
      - Ruby on Rails data synchronization application that uses background jobs to collect and record student data.
      - Alan helps connect different services used by Turing, sync data, and automate operational tasks.
      - Sync data from Populi to Airtable. (example, pulling enrollment data)
      - Picking up queued tasks from Airtable. (example, enrolling a new student)
      - Upgrade app from using legacy Populi API to Populi API V2 including optimizing all API calls, and updating service testing.
      - Utilize GoodJob to create asynchronous background jobs for data collection.
      - Write tests for background jobs using RSpec.

  - title: "Turing Curriculum Site ([https://curriculum.turing.edu/](https://curriculum.turing.edu/))" 
    image: "![](assets/img/turing_curriculum_site.png)"
    description: 
      - Combine the backend and frontend software engineering curriculum into a new combined curriculum site.
      - Review all Ruby and Javascript code throughout the curriculum for accuracy and clarity.
      - Create PRs and participate in PR conversations with other software engineers.

  - title: "BookHaven ([https://github.com/BookHaven/BookHaven-BE](https://github.com/BookHaven/BookHaven-BE))"
    image: "![](assets/img/bookhaven_logo.png)"
    description: 
      - Python and Django REST API for SOA application that manages inventories of Little Free Libraries.
      - Utilized Miro board, an agile workflow, and a JSON contract amongst a full-stack team to build an SOA application.
      - Designed and implemented HTML and CSS styling for frontend application.
      - Deployed frontend application using Vercel, and backend application using Heroku.